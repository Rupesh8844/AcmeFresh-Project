package com.acmefresh.service;

import java.time.LocalDateTime;
import java.util.Optional;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.acmefresh.DTO.LoginDTO;
import com.acmefresh.exceptions.CustomerException;
import com.acmefresh.exceptions.LoginException;
import com.acmefresh.model.Admin;
import com.acmefresh.model.AdminSession;
import com.acmefresh.model.ClientSession;
import com.acmefresh.model.CustomerSession;
import com.acmefresh.repository.AdminDao;
import com.acmefresh.repository.AdminSessionDao;
import com.acmefresh.repository.ClientDao;
import com.acmefresh.repository.ClientSessionDao;
import com.acmefresh.repository.CustomerDao;
import com.acmefresh.repository.CustomerSessionDao;

@Service
public class LoginServiceImpl implements LoginService{

	@Autowired
	private CustomerDao customerDAO;

	@Autowired
	private CustomerSessionDao customerSessionDAO;
	
	@Autowired
	private ClientDao clientDao;
	
	@Autowired
	private ClientSessionDao clientSessionDao;
	
	@Autowired
	private AdminDao adminDao;
	
	@Autowired
	private AdminSessionDao adminSessionDao;

	@Override
	public AdminSession loginAdmin(LoginDTO admin) {
		
		Optional<Admin> res =  adminDao.findByMobile(admin.getMobile());

		if (res.isEmpty()) {
			System.out.println("No Admin exist");
			throw new CustomerException("Admin was not there in the data base");
		}

		Admin existingAdmin = res.get();
		
		Optional<AdminSession> opt = adminSessionDao.findByAdminId(existingAdmin.getAdminId());

		if (opt.isPresent()) {
			throw new LoginException("User already logged in");
		}

		if (existingAdmin.getPassword().equals(admin.getPassword())) {

			AdminSession newSession = new AdminSession();
			newSession.setAdminId(existingAdmin.getAdminId());
			newSession.setLocalDateTime(LocalDateTime.now());
			UUID uuid = UUID.randomUUID();
			String token = uuid.toString().split("-")[0];

			newSession.setUuid(token);

			return adminSessionDao.save(newSession);
			
		} else {
			throw new LoginException("Password Incorrect. Try again...");
		}
	}
	

	@Override
	public ClientSession loginClient(LoginDTO client) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public CustomerSession loginCustomer(LoginDTO customer) {
		// TODO Auto-generated method stub
		return null;
	}
	
}
